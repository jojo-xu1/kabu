<template>
	<view>
		<uni-view class="uni-row head">
			<view class="uni-list-cell-db sort">
				<picker @change="sortChange" :value="sortIndex" :range="sortArray">
					<view><text class="sortTxt">{{sortArray[sortIndex] + '  ▼'}}</text></view>
				</picker>
			</view>
			<uni-button @click="open" type="primary" class="shibori">
				<text class="shiboriTxt">絞り込み</text>
			</uni-button>
		</uni-view>
		<uni-view class="uni-column" v-model="kabuDaily">
			<uni-view class="uni-row kabu" v-for="(item,index) in kabuDaily" :key="item.stock.stockId">
				<uni-view class="kabuIndex"><text class="kabuIndexTxt">{{ index }}</text></uni-view>
				<uni-view class="uni-column kabuCol1">
					<uni-view class="kabuName">
						<text class="kabuNameTxt">{{ kabuNameSubstr(item.stock.stockName) }}</text>
					</uni-view>
					<uni-view class="kabuCode">
						<text class="kabuCodeTxt">{{ item.stock.stockId }}</text>
					</uni-view>
				</uni-view>
				<uni-view class="kabuRate"><text class="kabuRateTxt">{{ item.stock.dividendYield }}</text></uni-view>
				<uni-view class="uni-column kabuCol2">
					<uni-view class="kabuTori"><text class="kabuToriTxt">{{ item.endPrice }}</text></uni-view>
					<uni-view class="kabuToriUp"></uni-view>
				</uni-view>
			</uni-view>
		</uni-view>
		<uni-popup ref="popup" type="top" class="popUp">
			<uni-view class="uni-column" v-model="jouken">
				<uni-view class="uni-row">
					<uni-button @click="close" type="primary" class="close">
						<text class="closeTxt popUpTxt">キャンセル</text>
					</uni-button>
					<uni-view style="width: 442upx;">
						<text style="height: 100upx; background-color: #FFFFFF;"></text>
					</uni-view>
					<uni-button @click="close" type="primary" class="confirm">
						<text class="confirmTxt popUpTxt">確認</text>
					</uni-button>
				</uni-view>
				<uni-view class="uni-row" v-for="(item,index) in jouken" :key="item.joukenId">
					<uni-view class="andOrKubn">
						<text v-if="index != 0" class="popUpBg popUpTxt andOrKubnTxt">かつ</text>
						<text v-else class="popUpBg popUpTxt andOrKubnTxt" style="background-color: #FFFFFF;"></text>
					</uni-view>
					<uni-view class="joukenName">
						<picker @change="joukenChange(index, $event)" :value="item.joukenIndex" :range="joukenArray">
							<uni-view>
								<text
									class="popUpBg popUpTxt joukenNameTxt">{{joukenArray[item.joukenIndex] + '  ▼'}}</text>
							</uni-view>
						</picker>
					</uni-view>
					<uni-view class="joukenValue">
						<input class="popUpBg popUpTxt joukenValueTxt" type="digit" maxlength="4" placeholder="0" />
					</uni-view>
					<uni-view class="joukenLabel">
						<text class="popUpBg popUpTxt joukenLabelTxt">から</text>
					</uni-view>
					<uni-view class="joukenValue">
						<input class="popUpBg popUpTxt joukenValueTxt" type="digit" maxlength="4" placeholder="100" />
					</uni-view>
					<uni-view class="joukenLabel">
						<text class="popUpBg popUpTxt joukenLabelTxt">まで</text>
					</uni-view>
					<uni-button @click="reduceJouken(index)" type="primary" class="rdcJouken">
						<text class="popUpBg popUpTxt rdcJoukenTxt">×</text>
					</uni-button>
				</uni-view>
				<uni-view>
					<uni-button @click="addJouken" type="primary" class="addJouken">
						<text class="addJoukenTxt">＋</text>
					</uni-button>
				</uni-view>
			</uni-view>
		</uni-popup>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif

	export default {
		components: {},
		data() {
			return {
				title: 'picker',
				sortArray: ['上昇傾向', '運転資金'],
				sortIndex: 0,
				joukenArray: ['値上がり率', 'ストップ高', '条件３', '条件４'],
				jouken: [{
					"joukenId": "jouken0",
					"joukenIndex": 0
				}],
				kabuDaily: [{
						"stock": {
							"stockId": "2269",
							"stockName": "明治ホールディングス(株)",
							"industry": "食料品",
							"total": "152,683,400",
							"dividendYield": "2.16%",
							"dividendPershare": "150.00",
							"per": "15.23",
							"pbr": "1.69",
							"eps": "454.90",
							"bps": "4,099.35",
							"unit": "100"
						},
						"dayId": "20210201",
						"startPrice": 7120,
						"endPrice": 7150,
						"highPrice": 7060,
						"lowPrice": 7110,
						"vol": 343500
					},
					{
						"stock": {
							"stockId": "2282",
							"stockName": "日本ハム(株)",
							"industry": "食料品",
							"total": "102,958,904",
							"dividendYield": "1.88%",
							"dividendPershare": "91.00",
							"per": "19.12",
							"pbr": "1.17",
							"eps": "253.13",
							"bps": "4,134.18",
							"unit": "100"
						},
						"dayId": "20210201",
						"startPrice": 4475,
						"endPrice": 4580,
						"highPrice": 4440,
						"lowPrice": 4490,
						"vol": 681200
					}
				]
			}
		},
		onReady() {
			this.getKabuDaily();
		},
		methods: {
			open() {
				// 通过组件定义的ref调用uni-popup方法
				this.$refs.popup.open()
			},
			close() {
				this.$refs.popup.close()
			},
			addJouken() {
				var joukenCount = this.jouken.length
				var newJouken = '{"joukenId": "jouken0","joukenIndex": 0}'
				var newJoukenJson = JSON.parse(newJouken)
				this.jouken.push(newJoukenJson)
			},
			reduceJouken(index) {
				this.jouken.splice(index, 1)
			},
			sortChange(e) {
				this.sortIndex = e.detail.value
				this.getKabuDaily();
			},
			joukenChange(index, e) {
				this.jouken[index].joukenIndex = e.detail.value
				console.log(e)
				console.log(index)
			},
			kabuNameSubstr(kabuName) {
				if (kabuName && kabuName.length > 8) {
					return kabuName.substr(0, 8) + "..."
				}
				return kabuName
			},
			appendZero(str) {
				return ("00" + str).substr((str + "").length);
			},
			getKabuDaily() {
				//Luke Zhou
				// var url = "http://13.112.112.160:8090/stock/dailyList"
				var url = this.$baseUrl + "/stock/dailyList"
				var num = "?num=1"
				var size = "&size=10"
				// var crtDate = new Date();
				// var crtDateStr = "&dailyId=" + crtDate.getFullYear() +
				// 	this.appendZero(crtDate.getMonth() + 1) +
				// 	this.appendZero(crtDate.getDate())
				var crtDateStr = "&dailyId=20210201"
				var flag = "&flag=1"

				uni.request({
					url: url + num + size + crtDateStr + flag,
					data: {},
					success: (result) => {
						if (result.statusCode == 200) {
							console.log(result)
							this.kabuDaily = result.data.data.list
						}
					}
				});
			}
		}
	}
</script>

<style lang="scss">
	@import '@/common/uni-nvue.scss';
</style>
<style>
	.uni-row {
		flex-direction: row;
	}

	.uni-column {
		flex-direction: column;
	}

	.head {
		height: 80upx;
	}

	.sort {
		height: 80upx;
		padding: 25upx 0 0 15upx;
	}

	.sortTxt {
		color: #007AFF;
		font-size: 25upx;
	}

	.shibori {
		height: 80upx;
		margin-left: 400upx;
		padding: 25upx 0 0 15upx;
	}

	.shiboriTxt {
		font-size: 25upx;
	}

	.kabu {
		margin: 5upx;
		width: 750upx;
		height: 80upx;
		padding: 5upx 5upx;
	}

	.kabuIndex {
		width: 75upx;
		height: 80upx;
		padding-top: 15upx;
		background-color: #007AFF;
		color: #FFFFFF;
	}

	.kabuIndexTxt {
		color: #FFFFFF;
		text-align: center;
	}

	.kabuCol1 {
		width: 300upx;
		height: 80upx;
		margin-left: 5upx;
	}

	.kabuName {
		width: 300upx;
		height: 40upx;
		padding-bottom: 0;
	}

	.kabuNameTxt {
		font-size: 35upx;
		font-weight: bold;
	}

	.kabuCode {
		width: 350upx;
		height: 30upx;
		padding-top: 0;
	}

	.kabuCodeTxt {
		font-size: 25upx;
		color: #A9A9A9;
	}

	.kabuRate {
		width: 250upx;
		height: 80upx;
	}

	.kabuRateTxt {
		font-size: 40upx;
		color: #007AFF;
		text-align: center;
	}

	.kabuCol2 {
		width: 225upx;
		height: 80upx;
	}

	.kabuTori {
		width: 80upx;
		height: 80upx;
	}

	.kabuToriTxt {
		font-size: 25upx;
		text-align: right;
	}

	.kabuToriUp {
		height: 23upx;
		font-size: 10upx;
		color: #007AFF;
		text-align: right;
	}

	.popUp {
		position: absolute;
		left: 0upx;
		top: 0upx;
		background: rgba(0, 0, 0, 0.4);
		width: 750upx;
		height: 750upx;
	}

	.popUpBg {
		background-color: #FFFFFF;
	}

	.popUpTxt {
		height: 80upx;
	}

	.close {background-color: #FFFFFF;}

	.closeTxt {
		width: 150upx;
		font-size: 25upx;
		color: #FFFFFF;
		background-color: #007AFF;
		padding: 25upx 0 0 0;
		margin: 10upx 0 10upx 5upx;
		border-radius: 20upx;
		text-align: center;
	}

	.confirm {
		background-color: #FFFFFF;
	}

	.confirmTxt {
		width: 150upx;
		font-size: 25upx;
		color: #FFFFFF;
		background-color: #007AFF;
		padding: 25upx 0 0 0;
		margin: 10upx 5upx 10upx 0;
		border-radius: 20upx;
		text-align: center;
	}

	.andOrKubn {
		width: 50upx;
	}

	.andOrKubnTxt {
		font-size: 20upx;
		color: #A9A9A9;
		padding-top: 32upx;
	}

	.joukenName {
		width: 250upx;
	}

	.joukenNameTxt {
		font-size: 30upx;
		padding: 28upx 0 0 0;
	}

	.joukenLabel {
		width: 80upx;
	}

	.joukenLabelTxt {
		padding-top: 22upx;
	}

	.joukenValue {
		width: 120upx;
	}

	.joukenValueTxt {
		font-size: 25upx;
		border: 1;
	}

	.rdcJouken {}

	.rdcJoukenTxt {
		width: 55upx;
		color: #FF0000;
		padding: 22upx 0 0 30upx;
	}

	.addJouken {
		width: 750upx;
	}

	.addJoukenTxt {
		font-size: 25upx;
		background-color: #FFFFFF;
		padding-top: 15upx;
	}
</style>

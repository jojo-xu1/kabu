<template>
	<view>
		<uni-view class="uni-column" v-model="colist">
			<text class="kabuTitle" >       銘柄                                           業種</text>
			<uni-view class="uni-row kabu" v-for="(item,index) in colist" :key="item.stock.stockId">
				<uni-view class="uni-column kabuCol1">
					<uni-view class="kabuName"><text class="kabuNameTxt" v-on:click=goTo(item.stock.stockId)>{{ item.stock.stockName}}</text></uni-view>
					<uni-view class="kabuCode"><text class="kabuCodeTxt">{{ item.stock.stockId }}</text></uni-view>
				</uni-view>
				<uni-view class="kabuIndustry"><text class="kabuIndustryTxt">{{ item.stock.industry}}</text></uni-view>
				<uni-view class="kabuRate" v-on:click=goTo(item.stock.stockId)><text class="kabuRateTxt">{{ item.stock.dividendYield }}</text></uni-view>
				
				<uni-view class="uni-column kabuCol2">
					<uni-view class="kabuName"><text class="kabuNameTxt">{{ item.startbuydate}}</text></uni-view>
					<uni-view class="kabuCode"><text class="kabuCodeTxt">購入</text></uni-view>
				</uni-view>
				<uni-view class="uni-column kabuCol2">
					<uni-view class="kabuName"><text class="kabuNameTxt">{{item.endselldate}}</text></uni-view>
					<uni-view class="kabuCode"><text class="kabuCodeTxt">売出</text></uni-view>
				</uni-view>
				
				

			</uni-view>
		</uni-view>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif

	export default {
		components: {},
		data() {
			return {
				title: 'picker',
				sortArray: ['上昇傾向', '運転資金'],
				sortIndex: 0,
				joukenArray: ['値上がり率', 'ストップ高', '条件３', '条件４'],
				jouken: [{
					"joukenId": "jouken0",
					"joukenIndex": 0
				}],
				tradeDate:[
					{"buyday":"20200102",
					 "sellday":"20200103"},
					{"buyday":"20200202",
					 "sellday":"20200203"},
					{"buyday":"20200302",
					 "sellday":"20200303"},
					{"buyday":"20200402",
					 "sellday":"20200403"},
				],
				colist: [{
					"stock": {
						"stockId": "",
						"stockName": "",
						"industry": "",
						"total": "",
						"dividendYield": "",
						"dividendPershare": "",
						"per": "",
						"pbr": "",
						"eps": "",
						"bps": "",
						"unit": ""
					},
					"dayId": "",
					"startPrice": "",
					"endPrice": "",
					"highPrice": "",
					"lowPrice": "",
					"todayUpRate": ""
				}]
			}
		},
		onReady() {
			this.getCollect();
		},
		methods: {
			open() {
				// 通过组件定义的ref调用uni-popup方法
				this.$refs.popup.open()
			},
			close() {
				this.$refs.popup.close()
			},
			addJouken() {
				var joukenCount = this.jouken.length
				var newJouken = '{"joukenId": "jouken0","joukenIndex": 0}'
				var newJoukenJson = JSON.parse(newJouken)
				this.jouken.push(newJoukenJson)
			},
			reduceJouken(index) {
				this.jouken.splice(index, 1)
			},
			sortChange(e) {
				this.sortIndex = e.detail.value
				this.getCollect();
			},
			joukenChange(index, e) {
				this.jouken[index].joukenIndex = e.detail.value
				console.log(e)
				console.log(index)
			},
			kabuNameSubstr(kabuName) {
				if (kabuName && kabuName.length > 8) {
					return kabuName.substr(0, 8) + "..."
				}
				return kabuName
			},
			appendZero(str) {
				return ("00" + str).substr((str + "").length);
			},
			// goTo(stockId) {
			//       // 带参数跳转
			// 	  console.log('stockId:', stockId)
			//       this.$router.push({ path:'@/pages/stockquot/', name: 'Kline', params: { alert: '页面跳转成功', stock_id: stockId }})

			//     },
			goTo(stockId) {
				uni.reLaunch({
					url: '/pages/stockquot/Kline' + '?stockId=' + stockId
				})
				console.log('stockId:', stockId)
			},
			getUserID() {
				var token = localStorage.getItem('tttocken');
				if (token) {
					this.userId = JSON.parse(localStorage.getItem('userDetails')).user_id
				} else {
					this.userId = ''
				}
				console.log("用户ID：：：", this.userId)
			},
			getUserID() {
				const id = uni.getStorageSync('id')
				console.log("用户ID：：：", this.userId)
			},
			// 获取已收藏股票
			getCollect() {
				var that = this;
				var baseUrl = uni.getStorageSync('baseUrl');
				const userId = uni.getStorageSync('userId');
				console.log("用户ID：：：", this.userId);
				var url = baseUrl + "/daily/collectionList";
				console.log("url1111", url)
				uni.request({
					url: url,
					data: {
						userId: userId
					},
					success: (result) => {
						if (result.statusCode == 200) {
							console.log("获取结果：：：", result.data)
							that.colist = result.data
						}
					}
				});
			}
		}
	}
</script>

<style lang="scss">
	@import '@/common/uni-nvue.scss';
</style>
<style>
	.uni-row {
		flex-direction: row;
	}

	.uni-column {
		flex-direction: column;
	}

	.head {
		height: 100upx;
		margin-bottom: 50rpx;
	}

	.sort {
		height: 80upx;
		padding: 25upx 0 0 15upx;
	}

	.sortTxt {
		color: #007AFF;
		font-size: 25upx;
	}

	.shibori {
		height: 80upx;
		margin-left: 400upx;
		padding: 25upx 0 0 15upx;
	}

	.shiboriTxt {
		font-size: 25upx;
	}

	.kabu {
		margin: 5upx;
		width: 750upx;
		height: 80upx;
		padding: 5upx 5upx;
	}

	.kabuIndex {
		width: 75upx;
		height: 80upx;
		padding-top: 15upx;
		background-color: #007AFF;
		color: #FFFFFF;
	}

	.kabuIndexTxt {
		color: #FFFFFF;
		text-align: center;
	}

	.kabuCol1 {
		width: 250upx;
		height: 80upx;
		margin-left: 5upx;
	}
	.kabuCol2 {
		width: 150upx;
		height: 80upx;
		margin-left: 5upx;
	}
	
	.kabuTitle {
		font-size: 20upx;
		font-weight: bold;
	}
	.kabuName {
		width: 220upx;
		height: 40upx;
		padding-bottom: 0;
	}

	.kabuNameTxt {
		font-size: 20upx;
		font-weight: bold;
	}

	.kabuCode {
		width: 200upx;
		height: 30upx;
		padding-top: 0;
	}

	.kabuCodeTxt {
		font-size: 25upx;
		color: #A9A9A9;
	}

	.kabuIndustry {
		width: 120upx;
		height: 80upx;
	}

	.kabuIndustryTxt {
		font-size: 20upx;
		font-weight: bold;
	}
	
	.kabuBuyday {
		width: 250upx;
		height: 80upx;
	}
	
	.kabuBuydayTxt {
		font-size: 20upx;
		font-weight: bold;
	}
	
	.kabuSellday {
		width: 100%;
		height: 80upx;
	}
	
	.kabuSelldayTxt {
		font-size: 20upx;
		font-weight: bold;
	}

	.kabuRate {
		width: 80upx;
		height: 80upx;
	}

	.kabuRateTxt {
		font-size: 25upx;
		color: #007AFF;
		text-align: center;
	}

	.kabuTori {
		width: 40upx;
		height: 80upx;
	}

	.kabuToriTxt {
		font-size: 25upx;
		text-align: right;
	}

	.kabuToriUp {
		height: 23upx;
		font-size: 10upx;
		color: #007AFF;
		text-align: right;
	}

	.popUp {
		position: absolute;
		left: 0upx;
		top: 0upx;
		background: rgba(0, 0, 0, 0.4);
		width: 750upx;
		height: 750upx;
	}

	.popUpBg {
		background-color: #FFFFFF;
	}

	.popUpTxt {
		height: 80upx;
	}

	.close {
		background-color: #FFFFFF;
	}

	.closeTxt {
		width: 150upx;
		font-size: 25upx;
		color: #FFFFFF;
		background-color: #007AFF;
		padding: 25upx 0 0 0;
		margin: 10upx 0 10upx 5upx;
		border-radius: 20upx;
		text-align: center;
	}

	.confirm {
		background-color: #FFFFFF;
	}

	.confirmTxt {
		width: 150upx;
		font-size: 25upx;
		color: #FFFFFF;
		background-color: #007AFF;
		padding: 25upx 0 0 0;
		margin: 10upx 5upx 10upx 0;
		border-radius: 20upx;
		text-align: center;
	}

	.andOrKubn {
		width: 50upx;
	}

	.andOrKubnTxt {
		font-size: 20upx;
		color: #A9A9A9;
		padding-top: 32upx;
	}

	.joukenName {
		width: 250upx;
	}

	.joukenNameTxt {
		font-size: 30upx;
		padding: 28upx 0 0 0;
	}

	.joukenLabel {
		width: 80upx;
	}

	.joukenLabelTxt {
		padding-top: 22upx;
	}

	.joukenValue {
		width: 120upx;
	}

	.joukenValueTxt {
		font-size: 25upx;
		border: 1;
	}

	.rdcJouken {}

	.rdcJoukenTxt {
		width: 55upx;
		color: #FF0000;
		padding: 22upx 0 0 30upx;
	}

	.addJouken {
		width: 750upx;
	}

	.addJoukenTxt {
		font-size: 25upx;
		background-color: #FFFFFF;
		padding-top: 15upx;
	}
</style>
